// <auto-generated />
using System;
using System.Collections.Generic;
using GW.Api.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GW.Api.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GW.Api.Data.Models.MusicModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("MusicId")
                        .HasColumnType("integer");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PlayListModelId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("PlaylistsId")
                        .HasColumnType("integer[]");

                    b.Property<string>("TrackLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayListModelId");

                    b.ToTable("MusicModel");
                });

            modelBuilder.Entity("GW.Api.Data.Models.PlayListModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("PlayListModel");
                });

            modelBuilder.Entity("GW.Api.Data.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("PlayListFavoritaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayListFavoritaId");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("GW.Api.Data.Models.MusicModel", b =>
                {
                    b.HasOne("GW.Api.Data.Models.PlayListModel", null)
                        .WithMany("Musics")
                        .HasForeignKey("PlayListModelId");
                });

            modelBuilder.Entity("GW.Api.Data.Models.PlayListModel", b =>
                {
                    b.HasOne("GW.Api.Data.Models.UserModel", null)
                        .WithMany("PlayLists")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("GW.Api.Data.Models.UserModel", b =>
                {
                    b.HasOne("GW.Api.Data.Models.PlayListModel", "PlayListFavorita")
                        .WithMany()
                        .HasForeignKey("PlayListFavoritaId");

                    b.Navigation("PlayListFavorita");
                });

            modelBuilder.Entity("GW.Api.Data.Models.PlayListModel", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("GW.Api.Data.Models.UserModel", b =>
                {
                    b.Navigation("PlayLists");
                });
#pragma warning restore 612, 618
        }
    }
}
